[tool:pytest]
# Pytest configuration for 100% placement guarantee testing

# Test discovery
python_files = test_*.py *_test.py test_100_percent_placement_guarantee.py
python_classes = Test* test_*
python_functions = test_*

# Test execution
addopts =
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --maxfail=3
    --color=yes

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    regression: marks tests as regression tests
    stress: marks tests as stress tests
    edge_case: marks tests as edge case tests
    production_data: marks tests using production data
    algorithm_specific: marks tests for specific algorithms
    quality_gate: marks tests for quality gate validation
    100_percent_guarantee: marks tests validating 100% placement guarantee

# Test paths
testpaths = tests

# Minimum test coverage (if using pytest-cov)
# addopts = --cov=core --cov=tests --cov-report=html --cov-report=term-missing --cov-fail-under=80

# Timeout configuration (if using pytest-timeout)
timeout = 600
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    error::FutureWarning

# Custom test session configuration
console_output_style = progress
junit_family = xunit2